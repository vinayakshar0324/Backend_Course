openapi: "3.0.0"
info:
  title: learn express swagger
  description: LCO - a course segment about writing docs
  version: 1.1.0
  contact:
    email: vinayak@gmail.com
    url: "lco.dev"
  
# servers:
#   - url: "https://localhost:4000/api/v1"
#     descripiton: for local host
#   - url: "http://localhost:4000/api/v1"
#     descripiton: for local host


servers:
  - url: "{protocol}://localhost:4000/api/{version}"
    descripiton: for local host - secure
    variables:
      version:
        enums:
        - v1
        - v2
        default: v1
      protocol:
        enums:
        - http
        - https
        default: http

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: token
    BearerAuth:
      type: http
      scheme: bearer


paths:
  /lco: 
    get:
      tags:
        - String
      summary: returns a greet message 
      responses:
        200:
          description: all good
          content:
            application/json:
              schema:
                type: string
                example: "mystring"
        400:
          description: bad request
        500:
          description: internal server error
  
  /lcoobject:
    get:
      tags:
        - Object
      summary: returns a uniquie course
      responses:
        200:
          description: all good
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  price:
                    type: number
        400:
          description: bad request
        500:
          description: internal server error
  
  /courses:
    get:
      tags:
        - Array
      summary: returns a all courses
      responses:
        200:
          description: all good
          content:
            application/json:
              schema:
                type: array
                items: 
                  type: object
              properties:
                id:
                  type: string
                name:
                  type: string
                price:
                  type: number
        400:
          description: bad request
        500:
          description: internal server error
  
  
  /mycourses/{courseId}:
    get:
      tags:
        - String
      summary: returns course based on request id
      parameters:
        - name: courseId
          in: path
          required: true
          default: 22
          schema:
            type: string  
      responses:
        200:
          description: all good
          content:
            application/json:
              schema:
                type: array
                items: 
                  type: object
              properties:
                id:
                  type: string
                name:
                  type: string
                price:
                  type: number
        400:
          description: bad request
        500:
          description: internal server error
  
  /addCourses:
    post:
      tags:
        - String
      summary: adds a new course in db
      consumes: 
        - application/json
      produces: 
        - application/json
      responses:
        200:
          description: all good
          content:
            application/json:
              schema:
                type: array
                items: 
                  type: object
              properties:
                id:
                  type: string
                name:
                  type: string
                price:
                  type: number
        400:
          description: bad request
        500:
          description: internal server error
  
  /coursequery:
    get:
      tags:
        - String
      summary: learn about coursequery
      consumes: 
        - application/json
      produces: 
        - application/json
      responses:
        200:
          description: all good
          content:
            application/json:
              schema:
                type: array
                items: 
                  type: object
              properties:
                id:
                  type: string
                name:
                  type: string
                price:
                  type: number
        400:
          description: bad request
        500:
          description: internal server error